#! /bin/sh
PANEL_FIFO=/tmp/panel-fifo
PANEL_HEIGHT=30
ICON_FONT="FontAwesome:size=14"

if [ $(pgrep -cx panel) -gt 1 ] ; then
	printf "%s\n" "The panel is already running." >&2
	exit 1
fi

trap 'trap - TERM; kill 0' INT TERM QUIT EXIT

[ -e "$PANEL_FIFO" ] && rm "$PANEL_FIFO"
mkfifo "$PANEL_FIFO"

bspc config top_padding $PANEL_HEIGHT
bspc control --subscribe > "$PANEL_FIFO" &
xtitle -sf 'T%s' > "$PANEL_FIFO" &

# clock
while true;
do
	echo 'C ' $(date +"%l:%M %p");
	sleep 5;
done > "$PANEL_FIFO" &

# date
while true;
do
	echo 'D ' $(date +'%b %d')
	sleep 5
done > $PANEL_FIFO &

# volume
while true;
do
	level=$(amixer -M get Master | tail -n 1 | cut -d '[' -f 2 | sed 's/].*//g')
	status=$(amixer -M get Master | tail -n 1 | cut -d '[' -f 4 | sed 's/].*//g')
	if [ $status == "on" ]; then
		echo 'V ' $level
	else
		echo 'V ' $level
	fi
	sleep 0.1
done > $PANEL_FIFO &

# wifi
while true;
do
	adapter=$(iw dev | grep 'Interface' | sed 's/Interface //' | sed 's/\t//')
	if [ -n "$adapter" ]; then
		wifi_ssid=$(iw "$adapter" link | grep 'SSID' | sed 's/SSID: //' | sed 's/\t//')
		wifi_signal=$(iw "$adapter" link | grep 'signal' | sed 's/signal: //' | sed 's/ dBm//' | sed 's/\t//')
		echo L'' $wifi_ssid '|' $wifi_signal
	else
		echo L''
	fi
	sleep 10
done > $PANEL_FIFO &

# battery
while true;
do
  if hash acpi 2>/dev/null; then
	  batt_level=$(acpi -b | grep -o '[[:digit:]]\+%' | sed 's/%//')
	  if [ $batt_level -ge 80 ]; then
		  echo B'' $batt_level%
	  elif [ $batt_level -ge 60 -a $batt_level -lt 80 ]; then
			echo B'' $batt_level%
    elif [ $batt_level -ge 40 -a $batt_level -lt 60 ]; then
      echo B'' $batt_level%
    elif [ $batt_level -ge 20 -a $batt_level -lt 40 ]; then
      echo B'' $batt_level%
	  else
			echo B'' $batt_level%
    fi
  else
    echo B''
  fi
	sleep 30;
done > "$PANEL_FIFO" &

. panel_colors

cat "$PANEL_FIFO" | panel_bar | lemonbar -g x$PANEL_HEIGHT -f "$PANEL_FONT_FAMILY" -f "$ICON_FONT" -F "$COLOR_FOREGROUND" -B "$COLOR_BACKGROUND" -u 2 | zsh &

wait
